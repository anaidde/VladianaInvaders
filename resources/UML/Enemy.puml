@startuml

class Engine{

    // SINGLETON \\\\

    GameObjects : private

    void update() : private
    void redraw() : private
    void initialiseEngine() : private
    void run() : public THREAD SLEEP
}

class GameObjects{
    Player player: private
    Enemy enemy: private
    Gun gameGuns : private
    SpaceShip gameShips : private

    void update() : private
}

interface Enemy {
    void update() : public
    void draw(Graphics graphics) : public
}

class EasyEnemy {
    SpaceShip enemySpaceShip : private
    Rectangle mesh : private
    Point coordinates : private
    Dimension dimension : private
    Double health : private

    void update() : public
    void draw(Graphics graphics) : public
    void behavior() : public
}


class RegularEnemy {
    SpaceShip enemySpaceShip : private
    Rectangle mesh : private
    Point coordinates : private
    Dimension dimension : private
    Double health : private

    void update() : public
    void draw(Graphics graphics) : public
    void behavior() : public
}

class HardEnemy {
    SpaceShip enemySpaceShip : private
    Rectangle mesh : private
    Point coordinates : private
    Dimension dimension : private
    Double health : private

    void update() : public
    void draw(Graphics graphics) : public
    void behavior() : public
}

class BossEnemy {
    SpaceShip enemySpaceShip : private
    Rectangle mesh : private
    Point coordinates : private
    Dimension dimension : private
    Double health : private


    void update() : public
    void draw(Graphics graphics) : public
    void behavior() : public
}

class StaticEnemy {
    Rectangle mesh : private
    Point coordinates : private
    Dimension dimension : private
    Double health : private

    void update() : public
    void draw(Graphics graphics) : public
    void behavior() : public
}

class SpaceShip {
    Double health : private
    BufferedImage sprite : private
    Rectangle spriteDimension : private
}

class Projectile {
    ProjectileType projectileType : private
    Rectangle mesh : private
    Point coordinates : private
    Dimension dimension : private

    void update() : public
    void draw(Graphics graphics) : public
}

enum ProjectileType {
 /*
    TBD
 */
}

interface FiringPattern {
    Projectile fireNextProjectile() : public
}

class Gun {
    ProjectileType projectileType : private
    FiringPattern firingPattern : private
}

class LinearFiringPattern{

}

class ScatterShotFiringPattern{

}

class ChainGunFiringPattern{

}

Engine "1" *-- "1" GameObjects
GameObjects "1" *-- "1.." Enemy
GameObjects "1" *-- "1.." SpaceShip
GameObjects "1"  *-- "1.." Gun
GameObjects "1" *-- "1.." Projectile
GameObjects "1" o-- "1.." Projectile
FiringPattern ^-- LinearFiringPattern
FiringPattern ^-- ScatterShotFiringPattern
FiringPattern ^-- ChainGunFiringPattern
FiringPattern "1" *-- "1.." Projectile

Gun "1" o-- "1" FiringPattern

Enemy "1" o-- "1" SpaceShip
Enemy "1" o-- "1" Gun
Enemy ^-- EasyEnemy
Enemy ^-- RegularEnemy
Enemy ^-- HardEnemy
Enemy ^--- BossEnemy
Enemy ^-- StaticEnemy

ProjectileType . Projectile



@enduml